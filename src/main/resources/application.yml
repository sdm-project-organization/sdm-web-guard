

server:
  port: 9999

signing:
 key: "345345fsdgsf5345"


env:
  host:
    local: localhost
    dev: dev.avocadostudio.xyz
  db:
    local:
      port: 3306
      schema: GUARD
    dev:
      port: 3306
      schema: GUARD

---

# ================ DEFAULT ================

spring:
  profiles: default
  application:
    name: guard
  datasource:
    url: jdbc:mysql://${env.host.dev}:${env.db.dev.port}/${env.db.dev.schema}?verifyServerCertificate=false&useSSL=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        show_sql: true
  main:
    allow-bean-definition-overriding: true

security:
  oauth2:
    resource:
      user-info-uri: http://${env.host.dev}:8090/auth/user

eureka:
  instance:
    hostname: ${env.host.local}
  client:
    registerWithEureka: true
    fetchRegistry: true
  serviceUrl:
    defaultZone: http://${eureka.instance.hostname}:8761/eureka/

---

# ================ DEV ================

spring:
  profiles: dev
  application:
    name: guard
  datasource:
    url: jdbc:mysql://${env.host.dev}:${env.db.dev.port}/${env.db.dev.schema}?verifyServerCertificate=false&useSSL=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        show_sql: true
  main:
    allow-bean-definition-overriding: true

security:
  oauth2:
    resource:
      user-info-uri: http://${env.host.dev}:8090/auth/user

eureka:
  instance:
    hostname: ${env.host.dev}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/